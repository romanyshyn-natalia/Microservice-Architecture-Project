version: "2.2"
services:
  db:
    image: mongo:latest
    environment:
      - MONGO_INITDB_DATABASE=users

    volumes:
      - ./data/init-users-db.js:/docker-entrypoint-initdb.d/init-users-db.js:ro

    ports:
      - "27018:27017"
    expose:
      - "27017"
    networks:
      - full-network

  app-register:
    build: .
    command: python ./register-service/register.py
    ports:
      - "8081"
    volumes:
      - .:/app
    expose:
      - "8081"
    links:
      - db
    depends_on:
      - db
    networks:
      - full-network
    healthcheck:
      test: curl --fail http://localhost || exit 1
      interval: 60s
      retries: 5
      start_period: 20s
      timeout: 10s

  app-login:
    build: .
    command: python ./login-service/login.py
    ports:
      - "8080"
    volumes:
      - .:/app
    expose:
      - "8080"
    links:
      - db
    depends_on:
      - db
    networks:
      - full-network
    healthcheck:
      test: curl --fail http://localhost || exit 1
      interval: 60s
      retries: 5
      start_period: 20s
      timeout: 10s

  web-app:
    build: .
    command: python ./website/app.py
    ports:
        - "5000:5000"
    volumes:
      - .:/app
    expose:
      - "5000"
    depends_on:
      - app-register
      - app-login
    networks:
      - full-network
    healthcheck:
      test: curl --fail http://localhost || exit 1
      interval: 60s
      retries: 5
      start_period: 20s
      timeout: 10s

  patients:
    build: ./patients-service
    command: python patients_service.py
    networks:
      - full-network
    ports:
      - "8083"
    expose:
      - "8083"
    depends_on:
      - cassandra-load-keyspace2
#      cassandra:
#        condition: service_healthy

  doctors:
    build: ./doctors-service
    command: python doctors_service.py
    networks:
      - full-network
    ports:
      - "8084"
    expose:
      - "8084"
    depends_on:
      - patients
  #      cassandra:
  #        condition: service_healthy


  cassandra:
    image: cassandra:3.11.2
    container_name: cassandra
    ports:
      - "9042:9042"
    expose:
      - "9042"
    environment:
      - "MAX_HEAP_SIZE=256M"
      - "HEAP_NEWSIZE=128M"
    restart: always
    volumes:
      - ./out/cassandra_data:/var/lib/cassandra
    healthcheck:
      test: [ "CMD", "cqlsh", "-u cassandra", "-p cassandra" ,"-e describe keyspaces" ]
      interval: 15s
      timeout: 10s
      retries: 10
    networks:
      - full-network

  cassandra-load-keyspace:
    container_name: cassandra-load-keyspace
    image: cassandra:3.11.2
    depends_on:
      cassandra:
        condition: service_healthy
    volumes:
      - ./patients-service/create_tables.cql:/schema.cql
    command: /bin/bash -c "echo loading cassandra keyspace && cqlsh cassandra -f /schema.cql"
    networks:
      - full-network

  cassandra-load-keyspace2:
    container_name: cassandra-load-keyspace2
    image: cassandra:3.11.2
    depends_on:
      cassandra:
        condition: service_healthy
    volumes:
      - ./doctors-service/create_tables.cql:/schema.cql
    command: /bin/bash -c "echo loading cassandra keyspace && cqlsh cassandra -f /schema.cql"
    networks:
      - full-network


networks:
  full-network:
    name: full-network

